<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Glowing - Reveal The Beauty of Skin</title>

    <!-- 
    - favicon
  -->
    <link rel="shortcut icon" href="./favicon.svg" type="image/svg+xml">

    <!-- 
    - custom css link
  -->
    <link rel="stylesheet" href="./assets/css/style.css">
    <link rel="stylesheet" href="./assets/css/checkout.css">
    <!-- 
    - google font link
  -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Urbanist:wght@400;500;600;700;800&display=swap"
        rel="stylesheet">

    <!-- 
    - preload images
  -->
    <link rel="preload" as="image" href="./assets/images/logo.png">
    <link rel="preload" as="image" href="./assets/images/hero-banner-1.jpg">
    <link rel="preload" as="image" href="./assets/images/hero-banner-2.jpg">
    <link rel="preload" as="image" href="./assets/images/hero-banner-3.jpg">

</head>

<body id="top">

    <!-- 
    - #HEADER
  -->

    <%- include('partials/header') %>


        <!-- 
        - #CHECKOUT
      -->

        <div id="order-success" class="order-success hidden">
            <div class="checkmark-container">
                <div class="checkmark-circle">
                    <div class="checkmark"></div>
                </div>
                <h2>Order Placed Successfully!</h2>
            </div>
        </div>

        <div class="checkout-container">
            <h2>Checkout</h2>

            <div class="checkout-wrapper">
                <!-- Shipping Form -->
                <form class="checkout-form">
                    <h3>PAYMENT METHOD</h3>
                    <div class="payment-methods">
                        <div class="payment-method">
                            <input type="radio" name="fixed" checked onclick="return false;">
                            <label for="">COD</label>
                        </div>
                        <div class="payment-method gray">
                            <input type="radio" disabled>
                            <label for="">COD</label>
                        </div>
                        <div class="payment-method gray">
                            <input type="radio" disabled>
                            <label for="">COD</label>
                        </div>
                    </div>

                    <h3>Shipping Information</h3>
                    <label>Full Name
                        <input type="text" name="full_name" placeholder="John Doe" required>
                    </label>
                    <label>Email
                        <input type="email" name="email" placeholder="john@example.com" required>
                    </label>
                    <label>Address Line
                        <input type="text" name="address_line" placeholder="123 Main Street" required>
                    </label>
                    <label>Phone No
                        <input type="text" name="phone" placeholder="938....." required>
                    </label>
                    <label>City
                        <input type="text" name="city" placeholder="New York" required>
                    </label>
                    <label>State
                        <input type="text" name="state" placeholder="State" required>
                    </label>
                    <label>Postal Code
                        <input type="text" name="postal_code" placeholder="10001" required>
                    </label>
                    <label>Country
                        <input type="text" name="country" placeholder="USA" required>
                    </label>

                </form>

                <!-- Order Summary -->
                <div class="checkout-summary">
                    <h3>Order Summary</h3>
                    <% let subtotal=0,shippingCost=100;%>
                        <% if (cartItems && cartItems.length> 0) { %>
                            <% cartItems.forEach(item=> {
                                if (item.productId) {
                                const itemTotal = item.price * item.quantity;
                                subtotal += itemTotal;
                                %>
                                <div class="summary-item">
                                    <p>
                                        <%= item.name %> × <%= item.quantity %> | <%= item.colorHex %> x <%= item.size %>
                                    </p>
                                    <p>₹<%= itemTotal.toFixed(2) %>
                                    </p>
                                </div>
                                <% } }); %>
                                    <% } else { %>
                                        <p>No items in your order.</p>
                                        <% } %>

                                            <div class="summary-item">
                                                <p>Shipping</p>
                                                <p>₹<%= shippingCost.toFixed(2) %>
                                                </p>
                                            </div>

                                            <div class="summary-total">
                                                <p>Total</p>
                                                <% const grandTotal=subtotal + shippingCost; %>
                                                    <p><strong>₹<%= grandTotal.toFixed(2) %></strong></p>
                                            </div>
                                            <button class="place-order-btn" id="order-btn">Place Order</button>
                </div>
            </div>
        </div>


        <!-- 
    - #FOOTER
  -->

        <%- include('partials/footer') %>


            <script>
                function showOrderSuccess() {
                    const successPopup = document.getElementById("order-success");
                    successPopup.classList.remove("hidden");

                    // Optional: auto-hide after 3 seconds
                    setTimeout(() => {
                        successPopup.classList.add("hidden");
                    }, 1000);
                }
                function generateNumericOrderId(length) {
                    if (length <= 0) {
                        return "";
                    }

                    // Start with a timestamp for a strong base of uniqueness
                    let idString = Date.now().toString(); // e.g., "1717878891000" (13 digits)

                    // If the timestamp is already longer than or equal to the desired length,
                    // take the last 'length' digits to ensure it's still unique and within bounds.
                    if (idString.length >= length) {
                        return idString.substring(idString.length - length);
                    }

                    // If the timestamp is shorter, fill the remaining length with random digits (0-9)
                    const remainingLength = length - idString.length;
                    for (let i = 0; i < remainingLength; i++) {
                        idString += Math.floor(Math.random() * 10).toString(); // Append a random digit
                    }

                    return idString; // This will be a string like "171787889100042" (15 digits)
                }

                document.getElementById('order-btn').addEventListener('click', async (e) => {
                    e.preventDefault();

                    const form = document.querySelector('.checkout-form');
                    const inputs = form.querySelectorAll('input');
                    let isValid = true;

                    // Remove previous errors
                    form.querySelectorAll('.error-message').forEach(el => el.remove());
                    inputs.forEach(input => input.classList.remove('input-error'));

                    let formData = {};

                    inputs.forEach(input => {
                        const name = input.name;
                        const value = input.value.trim();

                        if (input.required && value === '') {
                            isValid = false;
                            input.classList.add('input-error');

                            const error = document.createElement('div');
                            error.classList.add('error-message');
                            error.innerText = `Please enter ${name.replace('_', ' ')}`;
                            input.insertAdjacentElement('afterend', error);
                        } else {
                            formData[name] = value;
                        }
                    });

                    if (!isValid) return;

                    // ✅ Proceed if valid
                    const qikink_order_number = generateNumericOrderId(15);

                    // 1. Inject server-side cart data
                    const cartItems = JSON.parse('<%- JSON.stringify(cartItems || []) %>');

                    // 2. Generate line items dynamically
                    // const lineItems = cartItems.map(item => ({
                    //     search_from_my_products: "0",
                    //     quantity: String(item?.quantity ?? "1"),
                    //     price: String((item?.price ?? 0).toFixed(2)),
                    //     sku: String(item?.sku ?? "MStRnHs-Bk-M"),
                    //     print_type_id: "1",
                    //     designs: [
                    //         {
                    //             design_code: String(item?.design_code ?? "31002625"),
                    //             width_inches: String(item?.width_inches ?? "9.25"),
                    //             height_inches: String(item?.height_inches ?? "9.39"),
                    //             placement_sku: "fr",
                    //             design_link: String(item?.design_link ?? "https://your-domain.com/path/to/your/luffy_design.png"),
                    //             mockup_link: String(item?.mockup_link ?? "https://your-domain.com/path/to/your/luffy_mockup.png")
                    //         }
                    //     ]
                    // }));

                    const lineItems = [
                        {
                            search_from_my_products: "0",
                            quantity: "1",
                            price: "250.00",
                            sku: "MStRnHs-Bk-M",
                            print_type_id: "1",
                            designs: [
                                {
                                    design_code: "31002625",
                                    width_inches: "9.25",
                                    height_inches: "9.39",
                                    placement_sku: "fr",
                                    design_link: "https://your-domain.com/path/to/your/luffy_design.png",
                                    mockup_link: "https://your-domain.com/path/to/your/luffy_mockup.png"
                                }
                            ]
                        }
                    ];

                    // const lineItems = [
                    //     {
                    //         search_from_my_products: "1",
                    //         quantity: "1",
                    //         price: "250.00",
                    //         sku: "v--xu91CeGcVxc18ESNR8sprzVrA=="
                    //     }
                    // ];

                    // const lineItems = [
                    //     {
                    //         search_from_my_products: "1",
                    //         quantity: "1",
                    //         sku: "MStRnHs-Wh-M",
                    //         price: "100"
                    //     }
                    // ];


                    // Total order value stringified
                    const totalOrderValue = lineItems.reduce((sum, item) => sum + parseFloat(item.price) * parseInt(item.quantity), 0);
                    const grandTotalString = totalOrderValue.toFixed(2); // e.g., "549.00"

                    //Build final orderData object(everything as strings)
                    const orderData = {
                        "order_number": qikink_order_number,
                        "qikink_shipping": "1",
                        "gateway": "COD",
                        "total_order_value": "900",
                        "line_items": lineItems,
                        "shipping_address": {
                            "first_name": String(formData.full_name.split(' ')[0] || ''),
                            "last_name": String(formData.full_name.split(' ')[1] || ''),
                            "address1": String(formData.address_line || ''),
                            "phone": String(formData.phone || ''),
                            "email": String(formData.email || ''),
                            "city": String(formData.city || ''),
                            "zip": String(formData.postal_code || ''),
                            "province": String(formData.state || ''),
                            "country_code": "IN"
                        }

                    };

                    // const orderData = 
                    //     {
                    //         "order_number": qikink_order_number,
                    //         "qikink_shipping": "1",
                    //         "gateway": "COD",
                    //         "total_order_value": "549.00",
                    //         "line_items": [
                    //             {
                    //                 "search_from_my_products": 0, // Set to 0 as per the Qikink documentation for un-SKU'd products
                    //                 "quantity": 1,
                    //                 "price": "250.00", // Your selling price for this specific item in this line_item
                    //                 "sku": "MStRnHs-Bk-M", // <-- ***IMPORTANT: REPLACE THIS WITH A REAL GENERIC SKU***
                    //                 // You can find generic SKUs on dashboard.qikink.com -> Products -> SKU Descriptions.
                    //                 // Example: a specific SKU for a plain "Black T-shirt, Size L".
                    //                 "print_type_id": 1, // DTG printing (as per your previous demo JSON)
                    //                 "designs": [
                    //                     {
                    //                         "design_code": "31002625", // From your Excel "Design" column
                    //                         "width_inches": "9.25", // Extracted from your Design string
                    //                         "height_inches": "9.39", // Extracted from your Design string
                    //                         "placement_sku": "fr", // Common default for "front" placement. Check your Qikink setup.
                    //                         "design_link": "https://your-domain.com/path/to/your/luffy_design.png", // <-- ***IMPORTANT: REPLACE WITH ACTUAL URL TO YOUR DESIGN IMAGE***
                    //                         // This is where Qikink gets the actual image to print.
                    //                         "mockup_link": "https://your-domain.com/path/to/your/luffy_mockup.png" // <-- ***IMPORTANT: REPLACE WITH ACTUAL URL TO YOUR MOCKUP IMAGE***
                    //                         // This is for Qikink's reference/display.
                    //                     }
                    //                 ]
                    //             }
                    //         ],
                    //         "shipping_address": {
                    //             "first_name": "John",
                    //             "last_name": "Doe",
                    //             "address1": "123 Sample Street",
                    //             "phone": "9876543210",
                    //             "email": "john.doe@example.com",
                    //             "city": "Coimbatore",
                    //             "zip": "641004",
                    //             "province": "Tamil Nadu",
                    //             "country_code": "IN"
                    //         }
                    //     };

                    Object.keys(orderData).forEach(key => {
                        if (typeof orderData[key] === "number") {
                            orderData[key] = String(orderData[key]);
                        }
                    });

                    console.log(orderData);

                    try {
                        const response = await fetch('/checkout', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(orderData)
                        });

                        const result = await response.json();
                        if (result.error) {
                            console.error(result.error);
                        } else {
                            showOrderSuccess();
                            window.location.href = '/';
                        }
                    } catch (err) {
                        console.error('Failed to place order:', err);
                    }
                });

            </script>



            <!-- 
    - custom js link
  -->
            <script src="./assets/js/script.js" defer></script>
            <script src="main.js" defer></script>
            <script src="slider.js" defer></script>
            <script src="cart.js" defer></script>
            <script src="/assets/js/userlogin.js" defer></script>


            <!-- 
    - ionicon link
  -->
            <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
            <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>

</body>

</html>